;; FIXME(nverno): askdfkasdf
;; alsdkf WARN(nverno): kasdf
(string) @string
(escape_sequence) @string.escape
(capture (identifier) @type)
(anonymous_node (identifier) @string)
(predicate name: (identifier) @function.call)
(named_node name: (identifier) @variable)
(field_definition name: (identifier) @property)
(negated_field "!" @operator (identifier) @property)
(comment) @comment @spell

(quantifier) @operator
(predicate_type) @punctuation.special

"." @operator

[
  "["
  "]"
  "("
  ")"
] @punctuation.bracket

":" @punctuation.delimiter
["@" "#"] @punctuation.special
"_" @constant

((parameters (identifier) @number)
 ;; WARN(xasdf): item #12
 ;; NOTE: with embedded 'regex parser â¬Ž
 (#match? @number "^[-+]?[0-9]+(.[0-9]+)?$"))

;; FIXME(xkkxxk): xxx
;; TODO(xkxkxk): .. . . . 
((program . (comment)* . (comment) @include)
 (#lua-match? @include "^;+ *inherits *:"))

;;; WARN(dadad): akldsfsa
;;; kasdfkasldf
((program . (comment)* . (comment) @preproc)
 (#lua-match? @preproc "^;+ *extends"))

((program . (comment)* . (comment) @preproc)
 (#lua-match? @preproc "^;+ *extends"))

((program . (comment)* . (comment) @preproc)
 (#match? @preproc "^;+ *extends*"))

((parameters (identifier) @number)
 (#match? @number "^[-+]?[0-9]+$"))
